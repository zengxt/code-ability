package com.zxt.leetcode;

/**
 * 在给定的二维二进制数组?A?中，存在两座岛。（岛是由连续的 1 形成的一个最大组。）
 * <p>
 * 现在，我们可以将?0?变为?1，以使两座岛连接起来，变成一座岛。
 * <p>
 * 返回必须翻转的?0 的最小数目。（可以保证答案至少是 1。）
 * <p>
 * 示例 1：
 * 输入：[[0,1],[1,0]]
 * 输出：1
 * <p>
 * 示例 2：
 * 输入：[[0,1,0],[0,0,0],[0,0,1]]
 * 输出：2
 * <p>
 * 示例 3：
 * 输入：[[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]
 * 输出：1
 */
public class ShortestBridge {
    public static void main(String[] args) {

    }

    public int shortestBridge(int[][] A) {

        return 0;
    }
}
